<?xml version="1.0"?>

<project name='vino-core-nodes' default='dist' xmlns:ivy='antlib:org.apache.ivy.ant'>

    <property environment="env"/>
    <import file='${env.ANT_TOOLS_HOME}/ant.init.xml'/>

    <dirname property="vino-core-nodes.dir" file="${ant.file.vino-core-nodes}"/>
    <property name="vino-core-nodes-dir" location='${tmp.dir}/vino-core-nodes'/>

    <target name='vino-core-nodes'>
        <subant inheritrefs='false' target='dist'>
            <fileset dir='${vino-core-nodes.dir}' includes='build.xml'/>
        </subant>
    </target>

    <target name='dist'>
        <uptodate property='up-to-date' targetfile='${tmp.dir}/${ant.project.name}.built.at'>
            <srcfiles dir='${basedir}' includes='**/*'/>
        </uptodate>
        <if>
            <not>
                <isset property='up-to-date'/>
            </not>
            <then>
                <antcall target='distribute'/>
                <mkdir dir='${tmp.dir}'/>
                <touch file='${tmp.dir}/${ant.project.name}.built.at'/>
            </then>
            <else>
                <echo message='${ant.project.name} already up to date'/>
            </else>
        </if>
    </target>

    <target name='distribute' depends='eslint.check, dist.prepare, dist.node.module'/>

    <target name='dist.prepare'>

        <mkdir dir='${vino-core-nodes-dir}'/>
        <copy todir="${vino-core-nodes-dir}">
            <fileset dir="${basedir}">
                <include name="**/*"/>
                <exclude name="build.xml"/>
            </fileset>
        </copy>
        <copy todir="${vino-core-nodes-dir}/lib/ui/dataTables">
            <fileset dir="${tree.top}/lib-web/abacus-lib-js-ots/src/include/dataTables">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${vino-core-nodes-dir}/lib/ui/selectize">
            <fileset dir="${tree.top}/lib-web/abacus-lib-js-ots/src/include/selectize">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="dist.node.module" depends="eslint.check, dist.prepare">
        <mkdir dir='${tmp.npm.build.dir}'/>
        <copy todir="${tmp.npm.build.dir}">
            <fileset dir="${vino-core-nodes.dir}">
                <include name="*.json"/>
            </fileset>
            <fileset dir="${tree.top}/build/npm">
                <include name="vino-node-red-nodes*.tgz"/>
            </fileset>
        </copy>
        <copy todir="${tmp.npm.build.dir}/lib/ui/dataTables">
            <fileset dir="${tree.top}/lib-web/abacus-lib-js-ots/src/include/dataTables">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${tmp.npm.build.dir}/lib/ui/selectize">
            <fileset dir="${tree.top}/lib-web/abacus-lib-js-ots/src/include/selectize">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy tofile='${tmp.npm.build.dir}/package.json' file='nodes/package.json' overwrite='true'>
            <filterset>
                <filter token='VERSION' value="${version.string}"/>
            </filterset>
        </copy>
        <npm.build src.dir='${vino-core-nodes.dir}/nodes' dist.dir='${tmp.npm.build.dir}'/>
        <mkdir dir="${tree.top}/build/npm"/>

        <exec executable="cmd" dir="${tmp.npm.build.dir}" failonerror='true' osfamily='windows'><!-- output="${tmp.npm.build.dir}/dist/out.txt">-->
            <arg value='/c'/>
            <arg value='npm'/>
            <arg value="pack"/>
        </exec>
        <exec executable="npm" dir="${tmp.npm.build.dir}" failonerror='true' osfamily='unix'><!-- output="${tmp.npm.build.dir}/dist/out.txt">-->
            <arg value="pack"/>
        </exec>
        <exec executable="cmd" dir="${tmp.npm.build.dir}" failonerror='true' osfamily='windows'><!-- output="${tmp.npm.build.dir}/dist/out.txt">-->
           <arg value='/c'/>
           <arg value='npm'/>
            <arg value="cache"/>
            <arg value="add"/>
            <arg value="vino-core-nodes-${version.string}.tgz"/>
        </exec>
        <exec executable="npm" dir="${tmp.npm.build.dir}" failonerror='true' osfamily='unix'><!-- output="${tmp.npm.build.dir}/dist/out.txt">-->
            <arg value="cache"/>
            <arg value="add"/>
            <arg value="vino-core-nodes-${version.string}.tgz"/>
        </exec>
        <copy todir="${tree.top}/build/npm">
            <fileset dir="${tmp.npm.build.dir}">
                <include name="*.tgz"/>
            </fileset>
        </copy>
    </target>
    <target name='eslint.check'>
        <eslint src.dir='${vino-core-nodes.dir}' failonerror='true' sourceType='node' ignore.pattern='lib/**/*.js'/>
    </target>

</project>
